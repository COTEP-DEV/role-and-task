{"version":3,"sources":["../../../../src/RoleSystem/Handlers/AHandler.es6"],"names":["AHandler","data","something","idSomething","args","funcToCall","Error","elem","find","x","id","obj","call","genericAskingSomethingToDoSomething","objToStop","reduce","tmp","isActive","push","Utils","recursiveCallFunction","context","func","stopSomething","objToIterate","nameToSend","nameTakenInDocs","additionnalParams","map","name"],"mappings":"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","file":"AHandler.js","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport Utils from '../../Utils/Utils.js';\n\n/**\n * This class handle something\n */\nexport default class AHandler {\n  /**\n   * @param {Object} data\n   * @param {{[String]: Class}} mapSomethingConstantAndObject\n   * Map that match the constant of something with the actual Something classes\n   */\n  constructor(data) {\n    // List of available roles\n    // A Something is defined as SINGLETON\n    // A Something can be applied only once\n    this.something = data;\n  }\n\n  /**\n   * Ask something from Something\n   * @param {Number} idRole\n   * @param {Array} args\n   * @param {Function} funcToCall\n   */\n  async genericAskingSomethingToDoSomething(idSomething, args, funcToCall) {\n    // Cannot apply an abstract Something\n    if (idSomething === -1) throw new Error('E7001');\n\n    // Look in our array if we found the Something\n    const elem = Object.keys(this.something)\n      .find(x => this.something[x].id === idSomething);\n\n    // Cannot find the given id\n    if (!elem) throw new Error(`E7002 : idSomething: ${idSomething}`);\n\n    // If we have no object associated to the Something in the code\n    if (!this.something[elem].obj) throw new Error('EXXXX : Cannot find the object to apply/disable (obj in the code)');\n\n    // try to start the Something\n    return this.something[elem].obj[funcToCall].call(this.something[elem].obj, args);\n  }\n\n  /**\n   * Start the given Something\n   * @param {Number} idSomething\n   * @param {Object} args\n   */\n  async startSomething(idSomething, args) {\n    return this.genericAskingSomethingToDoSomething(idSomething, args, 'start');\n  }\n\n  /**\n   * Stop the given Something\n   * @param {Number} idSomething\n   * @param {Array} args\n   */\n  async stopSomething(idSomething, args) {\n    return this.genericAskingSomethingToDoSomething(idSomething, args, 'stop');\n  }\n\n  /**\n   * Stop all the running Something\n   * @param {?Array} args\n   */\n  async stopAllSomething(args = []) {\n    const objToStop = Object.keys(this.something)\n      .reduce((tmp, x) => {\n        if (this.something[x].obj && this.something[x].obj.isActive()) tmp.push(this.something[x].id);\n\n        return tmp;\n      }, []);\n\n    return Utils.recursiveCallFunction({\n      context: this,\n      func: this.stopSomething,\n      objToIterate: objToStop,\n      nameToSend: null,\n      nameTakenInDocs: null,\n      additionnalParams: args,\n    });\n  }\n\n  /**\n   * Get an object using the id of it\n   * @param {String} idSomething\n   */\n  async getSomething(idSomething) {\n    const elem = Object.keys(this.something)\n      .find(x => this.something[x].id === idSomething);\n\n    if (!elem) throw new Error(`EXXXX : Cannot find obj in the code ${idSomething}`);\n\n    // If we have no object associated to the Something in the code\n    if (!this.something[elem].obj) throw new Error(`EXXXX : Cannot find obj in the code ${JSON.stringify(this.something[elem])}`);\n\n    return this.something[elem].obj;\n  }\n\n  /**\n   * Get all something in array\n   */\n  getAllSomething() {\n    return Object.keys(this.something)\n      .map(x => this.something[x].obj);\n  }\n\n  /**\n   * Get a list of running something status (active or not)\n   */\n  getSomethingListStatus() {\n    return Object.keys(this.something)\n      .reduce((tmp, x) => {\n        if (this.something[x].obj) {\n          return [\n            ...tmp,\n\n            {\n              name: this.something[x].name,\n              id: this.something[x].id,\n              isActive: this.something[x].obj.isActive(),\n            },\n          ];\n        }\n\n        return [\n          ...tmp,\n\n          {\n            name: this.something[x].name,\n            id: this.something[x].id,\n            isActive: false,\n          },\n        ];\n      }, []);\n  }\n}\n"]}