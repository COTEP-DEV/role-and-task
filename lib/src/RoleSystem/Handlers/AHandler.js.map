{"version":3,"sources":["../../../../src/RoleSystem/Handlers/AHandler.ts"],"names":["AHandler","data","something","idSomething","args","funcToCall","PromiseCommandPattern","func","Errors","elem","Object","keys","find","x","id","obj","call","genericAskingSomethingToDoSomething","objToStop","reduce","tmp","isActive","push","Utils","recursiveCallFunction","context","stopSomething","objToIterate","nameToSend","nameTakenInDocs","additionnalParams","JSON","stringify","map","name"],"mappings":"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","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport Utils from '../../Utils/Utils.js';\nimport Errors from '../../Utils/Errors.js';\nimport PromiseCommandPattern from '../../Utils/PromiseCommandPattern.js';\n\n/**\n * This class handle something\n */\nexport default class AHandler {\n  /**\n   * @param {Object} data\n   * @param {{[String]: Class}} mapSomethingConstantAndObject\n   * Map that match the constant of something with the actual Something classes\n   */\n  constructor(data) {\n    // List of available roles\n    // A Something is defined as SINGLETON\n    // A Something can be applied only once\n    this.something = data;\n  }\n\n  /**\n   * Ask something from Something\n   * @param {Number} idRole\n   * @param {Array} args\n   * @param {Function} funcToCall\n   */\n  genericAskingSomethingToDoSomething(idSomething, args, funcToCall) {\n    return new PromiseCommandPattern({\n      func: async () => {\n        // Cannot apply an abstract Something\n        if (idSomething === -1) throw new Errors('E7001');\n\n        // Look in our array if we found the Something\n        const elem = Object.keys(this.something)\n          .find(x => this.something[x].id === idSomething);\n\n        // Cannot find the given id\n        if (!elem) throw new Errors('E7002', `idSomething: ${idSomething}`);\n\n        // If we have no object associated to the Something in the code\n        if (!this.something[elem].obj) throw new Errors('EXXXX', 'Cannot find the object to apply/disable (obj in the code)');\n\n        // try to start the Something\n        return this.something[elem].obj[funcToCall].call(this.something[elem].obj, args);\n      },\n    });\n  }\n\n  /**\n   * Start the given Something\n   * @param {Number} idSomething\n   * @param {Object} args\n   */\n  startSomething(idSomething, args) {\n    return new PromiseCommandPattern({\n      func: () => this.genericAskingSomethingToDoSomething(idSomething, args, 'start'),\n    });\n  }\n\n  /**\n   * Stop the given Something\n   * @param {Number} idSomething\n   * @param {Array} args\n   */\n  stopSomething(idSomething, args) {\n    return new PromiseCommandPattern({\n      func: () => this.genericAskingSomethingToDoSomething(idSomething, args, 'stop'),\n    });\n  }\n\n  /**\n   * Stop all the running Something\n   * @param {?Array} args\n   */\n  stopAllSomething(args = []) {\n    return new PromiseCommandPattern({\n      func: async () => {\n        const objToStop = Object.keys(this.something)\n          .reduce((tmp, x) => {\n            if (this.something[x].obj && this.something[x].obj.isActive()) tmp.push(this.something[x].id);\n\n            return tmp;\n          }, []);\n\n        return Utils.recursiveCallFunction({\n          context: this,\n          func: this.stopSomething,\n          objToIterate: objToStop,\n          nameToSend: null,\n          nameTakenInDocs: null,\n          additionnalParams: args,\n        });\n      },\n    });\n  }\n\n  /**\n   * Get an object using the id of it\n   * @param {String} idSomething\n   */\n  getSomething(idSomething) {\n    return new PromiseCommandPattern({\n      func: async () => {\n        const elem = Object.keys(this.something)\n          .find(x => this.something[x].id === idSomething);\n\n        if (!elem) throw new Errors('EXXXX', `Cannot find obj in the code ${idSomething}`);\n\n        // If we have no object associated to the Something in the code\n        if (!this.something[elem].obj) throw new Errors('EXXXX', `Cannot find obj in the code ${JSON.stringify(this.something[elem])}`);\n\n        return this.something[elem].obj;\n      },\n    });\n  }\n\n  /**\n   * Get all something in array\n   */\n  getAllSomething() {\n    return Object.keys(this.something)\n      .map(x => this.something[x].obj);\n  }\n\n  /**\n   * Get a list of running something status (active or not)\n   */\n  getSomethingListStatus() {\n    return Object.keys(this.something)\n      .reduce((tmp, x) => {\n        if (this.something[x].obj) {\n          return [\n            ...tmp,\n\n            {\n              name: this.something[x].name,\n              id: this.something[x].id,\n              isActive: this.something[x].obj.isActive(),\n            },\n          ];\n        }\n\n        return [\n          ...tmp,\n\n          {\n            name: this.something[x].name,\n            id: this.something[x].id,\n            isActive: false,\n          },\n        ];\n      }, []);\n  }\n}\n"],"file":"AHandler.js"}