{"version":3,"sources":["../../../../src/RoleSystem/Handlers/RoleHandler.es6"],"names":["RoleHandler","idRole","args","PromiseCommandPattern","func","startSomething","stopSomething","stopAllSomething","getSomethingListStatus","getSomething","AHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;;;AAEA;;;;AARA;AACA;AACA;;AAEA;IAQqBA,W;;;;;;;;;;;AACnB;;;;;8BAKUC,M,EAAQC,I,EAAM;AAAA;;AACtB,aAAO,IAAIC,+BAAJ,CAA0B;AAC/BC,cAAM;AAAA,iBAAM,OAAKC,cAAL,CAAoBJ,MAApB,EAA4BC,IAA5B,CAAN;AAAA;AADyB,OAA1B,CAAP;AAGD;;AAED;;;;;;;;6BAKSD,M,EAAQC,I,EAAM;AAAA;;AACrB,aAAO,IAAIC,+BAAJ,CAA0B;AAC/BC,cAAM;AAAA,iBAAM,OAAKE,aAAL,CAAmBL,MAAnB,EAA2BC,IAA3B,CAAN;AAAA;AADyB,OAA1B,CAAP;AAGD;;AAED;;;;;;;kCAIuB;AAAA;;AAAA,UAAXA,IAAW,uEAAJ,EAAI;;AACrB,aAAO,IAAIC,+BAAJ,CAA0B;AAC/BC,cAAM;AAAA,iBAAM,OAAKG,gBAAL,CAAsBL,IAAtB,CAAN;AAAA;AADyB,OAA1B,CAAP;AAGD;;AAED;;;;;;wCAGoB;AAClB,aAAO,KAAKM,sBAAL,EAAP;AACD;;AAED;;;;;;;4BAIQP,M,EAAQ;AACd,aAAO,KAAKQ,YAAL,CAAkBR,MAAlB,CAAP;AACD;;;EA9CsCS,kB;;kBAApBV,W","file":"RoleHandler.js","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport AHandler from './AHandler.js';\nimport PromiseCommandPattern from '../../Utils/PromiseCommandPattern.js';\n\n/**\n * This class handle role for the process\n * Meaning launching a role, stop a role\n */\nexport default class RoleHandler extends AHandler {\n  /**\n   * Start the given role\n   * @param {Number} idRole\n   * @param {Array} args\n   */\n  startRole(idRole, args) {\n    return new PromiseCommandPattern({\n      func: () => this.startSomething(idRole, args),\n    });\n  }\n\n  /**\n   * Stop the given role\n   * @param {Number} idRole\n   * @param {Array} args\n   */\n  stopRole(idRole, args) {\n    return new PromiseCommandPattern({\n      func: () => this.stopSomething(idRole, args),\n    });\n  }\n\n  /**\n   * Stop all the running roles\n   * @param {?Array} args\n   */\n  stopAllRole(args = []) {\n    return new PromiseCommandPattern({\n      func: () => this.stopAllSomething(args),\n    });\n  }\n\n  /**\n   * Get a list of running role status (active or not)\n   */\n  getRoleListStatus() {\n    return this.getSomethingListStatus();\n  }\n\n  /**\n   * Get a role\n   * @param {idRole}\n   */\n  getRole(idRole) {\n    return this.getSomething(idRole);\n  }\n}\n"]}