{"version":3,"sources":["../../../../../../../src/CommunicationSystem/SocketCommunicationSystem/ZeroMQ/Server/Implementations/ZeroMQServerPull.es6"],"names":["ZeroMQServerPull","ipServer","portServer","transport","identityPrefix","PromiseCommandPattern","func","startServer","socketType","CONSTANT","ZERO_MQ","SOCKET_TYPE","OMQ_PULL","stopServer","Errors","AZeroMQServerLight"],"mappings":";;;;;;;;;;;;;;;;;;;AAKA;;AACA;;AACA;;AACA;;AARA;AACA;AACA;AAEA;;AAMA;;;IAGqBA,gB;;;;;;;;;;;;;AACnB;;;;gCASG;AAAA;;AAAA,UAJDC,QAIC,QAJDA,QAIC;AAAA,UAHDC,UAGC,QAHDA,UAGC;AAAA,UAFDC,SAEC,QAFDA,SAEC;AAAA,UADDC,cACC,QADDA,cACC;AACD,aAAO,IAAIC,iCAAJ,CAA0B;AAC/BC,QAAAA,IAAI,EAAE;AAAA,iBAAM,KAAI,CAACC,WAAL,CAAiB;AAC3BN,YAAAA,QAAQ,EAARA,QAD2B;AAE3BC,YAAAA,UAAU,EAAVA,UAF2B;AAG3BC,YAAAA,SAAS,EAATA,SAH2B;AAI3BC,YAAAA,cAAc,EAAdA,cAJ2B;AAK3BI,YAAAA,UAAU,EAAEC,qBAASC,OAAT,CAAiBC,WAAjB,CAA6BC;AALd,WAAjB,CAAN;AAAA;AADyB,OAA1B,CAAP;AASD;AAED;;;;;;2BAGO;AAAA;;AACL,aAAO,IAAIP,iCAAJ,CAA0B;AAC/BC,QAAAA,IAAI,EAAE;AAAA,iBAAM,MAAI,CAACO,UAAL,EAAN;AAAA;AADyB,OAA1B,CAAP;AAGD;AAED;;;;;;;;;kCAMc;AACZ,YAAM,IAAIC,kBAAJ,CAAW,OAAX,CAAN;AACD;;;EAvC2CC,+B","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport AZeroMQServerLight from '../AZeroMQServerLight.js';\nimport CONSTANT from '../../../../../Utils/CONSTANT/CONSTANT.js';\nimport PromiseCommandPattern from '../../../../../Utils/PromiseCommandPattern.js';\nimport Errors from '../../../../../Utils/Errors.js';\n\n/**\n * Implements a zeroMQ Server : Type -> PULL\n */\nexport default class ZeroMQServerPull extends AZeroMQServerLight {\n  /**\n   * Start a ZeroMQ Server\n   * @param {{ipServer: String, portServer: String, transport: String, identityPrefix: String}} args\n   */\n  start({\n    ipServer,\n    portServer,\n    transport,\n    identityPrefix,\n  }) {\n    return new PromiseCommandPattern({\n      func: () => this.startServer({\n        ipServer,\n        portServer,\n        transport,\n        identityPrefix,\n        socketType: CONSTANT.ZERO_MQ.SOCKET_TYPE.OMQ_PULL,\n      }),\n    });\n  }\n\n  /**\n   * Stop a ZeroMQ Server\n   */\n  stop() {\n    return new PromiseCommandPattern({\n      func: () => this.stopServer(),\n    });\n  }\n\n  /**\n   * Send a message\n   * You cannot send a message to client, because the link to client is unidirectionnal\n   *\n   * @override\n   */\n  sendMessage() {\n    throw new Errors('E7014');\n  }\n}\n"],"file":"ZeroMQServerPull.js"}