{"version":3,"sources":["../../../../../../../src/CommunicationSystem/SocketCommunicationSystem/ZeroMQ/Server/Implementations/ZeroMQServerRouter.es6"],"names":["ZeroMQServerRouter","ipServer","portServer","transport","identityPrefix","PromiseCommandPattern","func","startServer","socketType","CONSTANT","ZERO_MQ","SOCKET_TYPE","OMQ_ROUTER","stopServer","clientIdentityByte","clientIdentityString","message","sendMessageToClient","AZeroMQServer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;;;AAEA;;;;IAIqBA,kB;;;;;;;;;;;AACnB;;;;;;;;YAKEC,Q,SAAAA,Q;YACAC,U,SAAAA,U;YACAC,S,SAAAA,S;YACAC,c,SAAAA,c;;;;;iDAEO,IAAIC,+BAAJ,CAA0B;AAC/BC,wBAAM;AAAA,2BAAM,OAAKC,WAAL,CAAiB;AAC3BN,wCAD2B;AAE3BC,4CAF2B;AAG3BC,0CAH2B;AAI3BC,oDAJ2B;AAK3BI,kCAAYC,mBAASC,OAAT,CAAiBC,WAAjB,CAA6BC;AALd,qBAAjB,CAAN;AAAA;AADyB,iBAA1B,C;;;;;;;;;;;;;;;;;AAWT;;;;;;;;;;;;kDAIS,KAAKC,UAAL,E;;;;;;;;;;;;;;;;;AAGT;;;;;;;;;gCAMYC,kB,EAAoBC,oB,EAAsBC,O,EAAS;AAC7D,WAAKC,mBAAL,CAAyBH,kBAAzB,EAA6CC,oBAA7C,EAAmEC,OAAnE;AACD;;;EArC6CE,uB,GAbhD;AACA;AACA;;AAEA;;;kBASqBlB,kB","file":"ZeroMQServerRouter.js","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport AZeroMQServer from '../AZeroMQServer.js';\nimport CONSTANT from '../../../../../Utils/CONSTANT/CONSTANT.js';\nimport PromiseCommandPattern from '../../../../../Utils/PromiseCommandPattern.js';\n\n/**\n * Implements a zeroMQ Server : Type -> ROUTER\n *\n */\nexport default class ZeroMQServerRouter extends AZeroMQServer {\n  /**\n   * Start a ZeroMQ Server\n   * @param {{ipServer: String, portServer: String, transport: String, identityPrefix: String}} args\n   */\n  async start({\n    ipServer,\n    portServer,\n    transport,\n    identityPrefix,\n  }) {\n    return new PromiseCommandPattern({\n      func: () => this.startServer({\n        ipServer,\n        portServer,\n        transport,\n        identityPrefix,\n        socketType: CONSTANT.ZERO_MQ.SOCKET_TYPE.OMQ_ROUTER,\n      }),\n    });\n  }\n\n  /**\n   * Stop a ZeroMQ Server\n   */\n  async stop() {\n    return this.stopServer();\n  }\n\n  /**\n   * Send a message\n   * @param {Arrray} clientIdentityByte\n   * @param {String} clientIdentityString\n   * @param {String} message\n   */\n  sendMessage(clientIdentityByte, clientIdentityString, message) {\n    this.sendMessageToClient(clientIdentityByte, clientIdentityString, message);\n  }\n}\n"]}