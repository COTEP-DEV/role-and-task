{"version":3,"sources":["../../../../../../../src/CommunicationSystem/SocketCommunicationSystem/ZeroMQ/Client/Implementations/ZeroMQClientPush.es6"],"names":["ZeroMQClientPush","ipServer","portServer","transport","identityPrefix","PromiseCommandPattern","func","startClient","socketType","CONSTANT","ZERO_MQ","SOCKET_TYPE","OMQ_PUSH","stopClient","message","sendMessageToServer","AZeroMQClientLight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;;;AAEA;;;;IAIqBA,gB;;;;;;;;;;;AACnB;;;;gCASG;AAAA;;AAAA,UAJDC,QAIC,QAJDA,QAIC;AAAA,UAHDC,UAGC,QAHDA,UAGC;AAAA,UAFDC,SAEC,QAFDA,SAEC;AAAA,UADDC,cACC,QADDA,cACC;;AACD,aAAO,IAAIC,+BAAJ,CAA0B;AAC/BC,cAAM;AAAA,iBAAM,OAAKC,WAAL,CAAiB;AAC3BN,8BAD2B;AAE3BC,kCAF2B;AAG3BC,gCAH2B;AAI3BC,0CAJ2B;AAK3BI,wBAAYC,mBAASC,OAAT,CAAiBC,WAAjB,CAA6BC;AALd,WAAjB,CAAN;AAAA;AADyB,OAA1B,CAAP;AASD;;AAED;;;;;;2BAGO;AAAA;;AACL,aAAO,IAAIP,+BAAJ,CAA0B;AAC/BC,cAAM;AAAA,iBAAM,OAAKO,UAAL,EAAN;AAAA;AADyB,OAA1B,CAAP;AAGD;;AAED;;;;;;;gCAIYC,O,EAAS;AACnB,WAAKC,mBAAL,CAAyBD,OAAzB;AACD;;;EArC2CE,4B,GAb9C;AACA;AACA;;AAEA;;;kBASqBhB,gB","file":"ZeroMQClientPush.js","sourcesContent":["//\n// Copyright (c) 2016 by Cotep. All Rights Reserved.\n//\n\n// Imports\nimport AZeroMQClientLight from '../AZeroMQClientLight.js';\nimport CONSTANT from '../../../../../Utils/CONSTANT/CONSTANT.js';\nimport PromiseCommandPattern from '../../../../../Utils/PromiseCommandPattern.js';\n\n/**\n * Implements a zeroMQ Client : Type -> PUSH\n *\n */\nexport default class ZeroMQClientPush extends AZeroMQClientLight {\n  /**\n   * Start a ZeroMQ Client\n   * @param {{ipServer: String, portServer: String, transport: String, identityPrefix: String}} args\n   */\n  start({\n    ipServer,\n    portServer,\n    transport,\n    identityPrefix,\n  }) {\n    return new PromiseCommandPattern({\n      func: () => this.startClient({\n        ipServer,\n        portServer,\n        transport,\n        identityPrefix,\n        socketType: CONSTANT.ZERO_MQ.SOCKET_TYPE.OMQ_PUSH,\n      }),\n    });\n  }\n\n  /**\n   * Stop a ZeroMQ Client\n   */\n  stop() {\n    return new PromiseCommandPattern({\n      func: () => this.stopClient(),\n    });\n  }\n\n  /**\n   * Send a message\n   * @param {String} message\n   */\n  sendMessage(message) {\n    this.sendMessageToServer(message);\n  }\n}\n"]}